# Generated by Django 5.1.2 on 2024-12-02 09:57

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import index_page.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Alarms',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='报警场景名')),
                ('level', models.IntegerField(db_index=True, default=0, verbose_name='报警等级')),
            ],
            options={
                'verbose_name': '报警场景',
                'db_table': 'tb_alarms',
            },
        ),
        migrations.CreateModel(
            name='Community',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('is_delete', models.BooleanField(db_index=True, default=False, verbose_name='软删除')),
                ('add_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='更新时间')),
                ('name', models.CharField(db_index=True, max_length=100, unique=True, verbose_name='小区名字')),
                ('address', models.TextField(verbose_name='小区地址')),
                ('describe', models.TextField(verbose_name='小区介绍')),
            ],
            options={
                'verbose_name': '小区记录表单',
                'db_table': 'tb_community',
            },
        ),
        migrations.CreateModel(
            name='Devices',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('is_delete', models.BooleanField(db_index=True, default=False, verbose_name='软删除')),
                ('device_type', models.IntegerField(db_index=True, default=0, verbose_name='设备类型')),
                ('add_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='更新时间')),
                ('device_name', models.CharField(db_index=True, max_length=100, verbose_name='设备名')),
                ('device_addr', models.CharField(db_index=True, max_length=100, verbose_name='设备地址')),
                ('children', models.IntegerField(db_index=True, default=0, verbose_name='设备子编号')),
            ],
            options={
                'verbose_name': '设备表单',
                'db_table': 'tb_devices',
            },
        ),
        migrations.CreateModel(
            name='FunctionCode',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='功能名称')),
                ('desc', models.CharField(max_length=500, verbose_name='简介')),
                ('add_time', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='修改时间')),
            ],
            options={
                'verbose_name': '功能分类表',
                'db_table': 'tb_function_code',
            },
        ),
        migrations.CreateModel(
            name='MessageRecord',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('dry_daily_weight', models.FloatField(db_index=True, default=0, verbose_name='干垃圾当日重量')),
                ('wet_daily_weight', models.FloatField(db_index=True, default=0, verbose_name='湿垃圾当日重量')),
                ('hazardous_daily_weight', models.FloatField(db_index=True, default=0, verbose_name='有害垃圾当日重量')),
                ('recyclable_daily_weight', models.FloatField(db_index=True, default=0, verbose_name='可回收垃圾当日重量')),
                ('dry_daily_visits', models.IntegerField(db_index=True, default=0, verbose_name='干垃圾当日投放次数')),
                ('wet_daily_visits', models.IntegerField(db_index=True, default=0, verbose_name='湿垃圾当日投放次数')),
                ('hazardous_daily_visits', models.IntegerField(db_index=True, default=0, verbose_name='有害垃圾当日投放次数')),
                ('recyclable_daily_visits', models.IntegerField(db_index=True, default=0, verbose_name='可回收垃圾当日投放次数')),
                ('uncivilized_behavior', models.IntegerField(db_index=True, default=0, verbose_name='当日不文明行为')),
                ('daily_time', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='修改时间')),
                ('is_delete', models.BooleanField(db_index=True, default=False, verbose_name='软删除')),
            ],
            options={
                'verbose_name': '垃圾相关指标数据记录表',
                'db_table': 'tb_message_record',
            },
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='配置名称')),
                ('value', models.CharField(db_index=True, max_length=500, verbose_name='配置值')),
                ('belong', models.CharField(db_index=True, max_length=100, verbose_name='所属对象')),
                ('create_time', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='修改时间')),
                ('is_delete', models.BooleanField(db_index=True, default=False, verbose_name='软删除')),
            ],
            options={
                'verbose_name': '项目配置信息',
                'db_table': 'tb_proj_settings',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('mobile', models.CharField(error_messages={'unique': '改手机号已注册'}, help_text='手机号', max_length=11, unique=True, verbose_name='手机号')),
                ('email_ac', models.BooleanField(default=False, verbose_name='邮箱状态')),
                ('is_delete', models.BooleanField(default=False)),
                ('update_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='更新日期')),
                ('salary', models.FloatField(default=0, verbose_name='用户工资')),
                ('employee_number', models.CharField(error_messages={'unique': '该工号已存在'}, help_text='工号', max_length=300, verbose_name='工号')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'db_table': 'tb_users',
            },
            managers=[
                ('objects', index_page.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('url', models.CharField(max_length=100, verbose_name='url地址')),
                ('create_time', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='修改时间')),
                ('is_delete', models.BooleanField(db_index=True, default=False, verbose_name='软删除')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='index_page.community')),
            ],
            options={
                'verbose_name': '轮播图（广告）配置信息表',
                'db_table': 'tb_banner',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('level', models.IntegerField(db_index=True, default=0, verbose_name='任务等级')),
                ('status', models.IntegerField(db_index=True, default=0, verbose_name='任务状态')),
                ('is_delete', models.BooleanField(db_index=True, default=False, verbose_name='软删除')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='任务名')),
                ('add_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='更新时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='拥有人')),
            ],
            options={
                'verbose_name': '任务状态表单',
                'db_table': 'tb_task',
            },
        ),
        migrations.CreateModel(
            name='UserAlarmsRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('add_time', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='创建时间')),
                ('deal_time', models.DateTimeField(db_index=True, default=None, verbose_name='解决时间')),
                ('alarm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='index_page.alarms')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '报警关联表单',
                'db_table': 'tb_user_alarmsrecord',
            },
        ),
        migrations.AddField(
            model_name='alarms',
            name='access_user',
            field=models.ManyToManyField(through='index_page.UserAlarmsRecord', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='UserCommunityRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_reason', models.CharField(max_length=300, verbose_name='访问原因')),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='index_page.community')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '用户小区记录表单',
                'db_table': 'tb_user_community',
            },
        ),
        migrations.AddField(
            model_name='community',
            name='access_user',
            field=models.ManyToManyField(through='index_page.UserCommunityRecord', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='UserDevicePri',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_reason', models.CharField(max_length=300, verbose_name='访问原因')),
                ('devices', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='index_page.devices')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '设备权限控制表单',
                'db_table': 'tb_user_device_pri',
            },
        ),
        migrations.AddField(
            model_name='devices',
            name='access_user',
            field=models.ManyToManyField(through='index_page.UserDevicePri', to=settings.AUTH_USER_MODEL),
        ),
    ]
